{"version":3,"sources":["components/goodsList/goodsList.js","components/orderList/OrderList.js","components/selectForSortByLength/SelectLength.js","components/orderForm/OrderForm.js","components/btnCreateNewOrder/NewOrder.js","App.js","index.js"],"names":["GoodsList","_this$props","this","props","goods","clickFunction","console","log","react_default","a","createElement","List","onClick","map","goodItem","Item","as","key","Icon","name","Content","React","PureComponent","OrderList","orderedItems","length","Fragment","celled","ordered","orderItem","SelectLength","generateOptions","Array","fill","item","index","value","text","Select","placeholder","options","onChange","OrderForm","state","defaultGoods","_this","shoppingCart","sortByLength","listClick","event","listItem","target","className","setState","prevState","updatedShoppingCart","Object","toConsumableArray","push","textContent","_objectSpread","btnReverseClick","reversedShoppingCart","reverse","btnClearShoppingListClick","btnSortAlphabetClick","sortedShoppingCart","sort","b","localeCompare","btnSortByLengthLClick","btnResetSortByLengthClick","changeSelectLengthForSort","lengthOfSorting","Number","filter","good","goodsList","orderList_OrderList","Button","secondary","selectForSortByLength_SelectLength","NewOrder","btnHidden","buttonClick","NewOrder_objectSpread","orderForm_OrderForm","color","content","icon","labelPosition","goodsFromServer","App","btnCreateNewOrder_NewOrder","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.8a141333.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from 'semantic-ui-react';\n\nclass GoodsList extends React.PureComponent {\n  render() {\n    const { goods, clickFunction } = this.props;\n    console.log('render goodList');\n\n    return (\n      <List onClick={clickFunction}>\n        {goods.map(goodItem => (\n          <List.Item as=\"a\" key={goodItem}>\n            <List.Icon name=\"shop\" />\n            <List.Content>{goodItem}</List.Content>\n          </List.Item>\n        ))}\n      </List>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n  clickFunction: PropTypes.func.isRequired,\n}\n\nexport default GoodsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from 'semantic-ui-react';\n\nclass OrderList extends React.PureComponent {\n  render() {\n    const { orderedItems } = this.props;\n    console.log('render order list');\n\n    return (\n      orderedItems.length ? (\n        <>\n          <h2>You ordered</h2>\n          <List celled ordered>\n            {orderedItems.map(orderItem => (\n              <List.Item>{orderItem}</List.Item>\n            ))}\n          </List>\n        </>\n      ) : (\n        <h2>You don't ordered anything</h2>\n      )\n    );\n  }\n}\n\nOrderList.propTypes = {\n  orderedItems: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default OrderList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select } from 'semantic-ui-react';\n\nclass SelectLength extends React.PureComponent {\n  generateOptions = () => {\n    const optionsArr = Array(10).fill('');\n\n    return optionsArr.map((item, index) => ({\n      key: index + 1,\n      value: index + 1,\n      text: index + 1,\n    }));\n  }\n\n  render() {\n    const { clickFunction } = this.props;\n\n    return (\n      <Select\n        placeholder=\"Select length\"\n        options={this.generateOptions()}\n        onChange={clickFunction}\n      />\n    );\n  }\n}\n\nSelectLength.propTypes = {\n  clickFunction: PropTypes.func.isRequired,\n}\n\nexport default SelectLength;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'semantic-ui-react';\nimport GoodsList from '../goodsList/goodsList';\nimport OrderList from '../orderList/OrderList';\nimport SelectLength from '../selectForSortByLength/SelectLength';\n\nclass OrderForm extends React.PureComponent {\n  state = {\n    defaultGoods: this.props.goods, // this goods will never change, it's original information from server\n    goods: this.props.goods,\n    shoppingCart: [],\n    sortByLength: false,\n  }\n\n  listClick = (event) => {\n    const listItem = event.target;\n\n    if (listItem.className !== 'content') {\n      return;\n    }\n\n    this.setState((prevState) => {\n      const updatedShoppingCart = [...prevState.shoppingCart];\n\n      updatedShoppingCart.push(listItem.textContent);\n\n      return ({\n        ...prevState,\n        shoppingCart: updatedShoppingCart,\n      });\n    });\n  };\n\n  btnReverseClick = (event) => {\n    this.setState((prevState) => {\n      const reversedShoppingCart = [...prevState.shoppingCart.reverse()];\n\n      return ({\n        ...prevState,\n        shoppingCart: reversedShoppingCart,\n      });\n    });\n  }\n\n  btnClearShoppingListClick = (event) => {\n    this.setState(prevState => ({\n      ...prevState,\n      shoppingCart: [],\n    }));\n  }\n\n  btnSortAlphabetClick = (event) => {\n    this.setState((prevState) => {\n      const sortedShoppingCart = [...prevState.shoppingCart.sort((a, b) => a.localeCompare(b))];\n\n      return ({\n        ...prevState,\n        shoppingCart: sortedShoppingCart,\n      });\n    });\n  }\n\n  btnSortByLengthLClick = (event) => {\n    this.setState(prevState => ({\n      ...prevState,\n      sortByLength: !prevState.sortByLength,\n    }));\n  }\n\n  btnResetSortByLengthClick = (event) => {\n    this.setState(prevState => ({\n      ...prevState,\n      goods: prevState.defaultGoods,\n      sortByLength: false,\n    }));\n  }\n\n  changeSelectLengthForSort = (event) => {\n    const lengthOfSorting = Number(event.target.textContent)\n\n    this.setState(prevState => ({\n      ...prevState,\n      goods: prevState.defaultGoods.filter(good => good.length <= lengthOfSorting),\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <GoodsList goods={this.state.goods} clickFunction={this.listClick} />\n        <OrderList orderedItems={this.state.shoppingCart} />\n        <Button secondary onClick={this.btnReverseClick}>Reverse</Button>\n        <br />\n        <br />\n        <Button secondary onClick={this.btnSortAlphabetClick}>Sort alphabetically</Button>\n        <br />\n        <br />\n        <Button secondary onClick={this.btnClearShoppingListClick}>Clear shopping list</Button>\n        <br />\n        <br />\n        <Button secondary onClick={this.btnResetSortByLengthClick}>Reset sorting by length</Button>\n        <br />\n        <br />\n        {\n          this.state.sortByLength ? (\n            <SelectLength clickFunction={this.changeSelectLengthForSort} />\n          ) : (\n            <Button secondary onClick={this.btnSortByLengthLClick}>Sort by length</Button>\n          )\n        }\n      </>\n    );\n  }\n}\n\nOrderForm.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nexport default OrderForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'semantic-ui-react';\nimport OrderForm from '../orderForm/OrderForm';\n\nclass NewOrder extends React.PureComponent {\n  state = {\n    btnHidden: false,\n    goods: this.props.goods,\n  };\n\n  buttonClick = (event) => {\n    this.setState(prevState => ({\n      ...prevState,\n      btnHidden: !prevState.btnHidden,\n    }));\n  };\n\n  render() {\n    return (\n      this.state.btnHidden\n        ? (\n          <OrderForm goods={this.state.goods} />\n        ) : (\n          <Button\n            color=\"teal\"\n            content=\"Create New Order\"\n            icon=\"add\"\n            labelPosition=\"left\"\n            onClick={this.buttonClick}\n          />\n        )\n    );\n  }\n}\n\nNewOrder.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nexport default NewOrder;\n","import React from 'react';\nimport './App.css';\nimport NewOrder from './components/btnCreateNewOrder/NewOrder';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App = () => (\n  <div className=\"App\">\n    <section className=\"goodsSection\">\n      <NewOrder goods={goodsFromServer} />\n    </section>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App test={123} />, document.getElementById('root'));\r\n"],"sourceRoot":""}